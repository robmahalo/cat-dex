{"ast":null,"code":"var _jsxFileName = \"/Users/robbymanalo/Library/Mobile Documents/com~apple~CloudDocs/Documents/Projects/react/plant-dex/plant-dex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      plants: [],\n      searchField: ''\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      plants: users\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      searchField: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      plants,\n      searchField\n    } = this.state;\n    const filteredPlants = plants.filter(plant => plant.name.toLowerCase().includes(searchField === null || searchField === void 0 ? void 0 : searchField.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        placeholder: \"search plants\",\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        plants: filteredPlants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robbymanalo/Library/Mobile Documents/com~apple~CloudDocs/Documents/Projects/react/plant-dex/plant-dex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","plants","searchField","componentDidMount","fetch","then","response","json","users","setState","handleChange","e","target","value","render","filteredPlants","filter","plant","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,8CAA1B;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb,CAHY,CAQZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEO;AAAV,KAAd,CAFjB;AAGD;;AAEDE,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,SAAKF,QAAL,CAAc;AAAEP,MAAAA,WAAW,EAAES,CAAC,CAACC,MAAF,CAASC;AAAxB,KAAd;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAA0B,KAAKF,KAArC;AACA,UAAMe,cAAc,GAAGd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,WAAlC,aAAkCA,WAAlC,uBAAkCA,WAAW,CAAEiB,WAAb,EAAlC,CAAvB,CAAvB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,YAAY,EAAE,KAAKT;AAFrB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEK;AAAlB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArCyB;;AAwC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      plants: [],\n      searchField: ''\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ plants: users }))\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n\n  render() {\n    const { plants, searchField } = this.state;\n    const filteredPlants = plants.filter(plant => plant.name.toLowerCase().includes(searchField?.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder='search plants'\n          handleChange={this.handleChange}\n        />\n        <CardList plants={filteredPlants}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}